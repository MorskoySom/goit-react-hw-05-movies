{"version":3,"file":"static/js/134.43462fdf.chunk.js","mappings":"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","sources":["api.js","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'b43bf019f87c421af8d090cb3b863d6f';\n\nexport const trandsDay = async () => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?${params}`);\n    return response.data\n}\n\nexport const searchMovieTitle = async (title) => {\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: title,\n    });\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?${params}`);\n    return response.data\n}\n\nexport const searchMovieId = async (movieID) => {\n    const movie_id = movieID\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?${params}`);\n    return response.data\n}\n\nexport const searchCast = async (movieID) => {\n    const movie_id = movieID\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/credits?${params}`);\n    return response.data\n}\n\n\nexport const searchReviews = async (movieID) => {\n    const movie_id = movieID\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movie_id}/reviews?${params}`);\n    return response.data\n}\n","import { searchMovieTitle } from \"api\";\nimport React, { useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [params, setParams] = useSearchParams();\n    const query = params.get(\"query\") ?? \"\"\n\n    const handleInputChange = (e) => {\n        params.set('query', e.target.value);\n        setParams(params);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() !== \"\") {\n            searchMovieTitle(query)\n                .then(data => {\n                    const movies = data.results;\n                    setMovies(movies);\n                })\n                .catch(error => {\n                    console.error('Error', error);\n                });\n        }\n    };\n\n    const location = useLocation()\n\n    return (\n        <div>\n            <h1>SearchMoviesPage</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={query}\n                    onChange={handleInputChange}\n                    placeholder=\"Search for movies\"\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            <ul>\n                {movies.map((movie) => (\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\n"],"names":["API_KEY","trandsDay","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","response","_context","prev","next","URLSearchParams","api_key","axios","concat","sent","abrupt","data","stop","apply","arguments","searchMovieTitle","_ref2","_callee2","title","_context2","query","_x","searchMovieId","_ref3","_callee3","movieID","movie_id","_context3","_x2","searchCast","_ref4","_callee4","_context4","_x3","searchReviews","_ref5","_callee5","_context5","_x4","Movies","_params$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","setParams","get","location","useLocation","_jsxs","children","_jsx","onSubmit","e","preventDefault","trim","then","results","catch","error","console","type","value","onChange","set","target","placeholder","map","movie","Link","to","id","state","from"],"sourceRoot":""}